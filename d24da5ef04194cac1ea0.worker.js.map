{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","lib/sudoku.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","workers/generate-sudoku-worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","iterator","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","_nonIterableSpread","_defineProperties","target","props","descriptor","configurable","writable","NUMBERS","Sudoku","grid","instance","Constructor","_classCallCheck","this","defaultGrid","protoProps","staticProps","reset","rand","min","max","Math","floor","random","baseNumbers","fillX","fillY","allowedNumbers","randomIndex","set","solve","generate","digNumbers","digX","digY","map","x","fill","y","allowedNumbersInRow","includes","Error","concat","allowedNumbersInColumn","allowedNumbersInBlock","row","filter","num","column","bx","by","numbersInBlock","j","numbersInRow","numbersInColumn","cells","forEach","_this","allowedNumbersLength","arguments","SIZE","cell","emptyCells","some","emptyCell","_emptyCell","every","solveUltimately","isSolved","_this$anyEmptyCell2","anyEmptyCell","shift","self","addEventListener","event","sudoku","console","time","timeEnd","postMessage","gridData","close"],"mappings":"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","file":"d24da5ef04194cac1ea0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/sudoku-react/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const SIZE = 9\nconst NUMBERS = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nexport default class Sudoku {\n  grid: Array<number[]>\n\n  constructor(grid?: Array<number[]>) {\n    this.grid = grid || this.defaultGrid()\n  }\n\n  reset() {\n    this.grid = this.defaultGrid()\n  }\n\n  generate(): void {\n    this.reset()\n\n    const rand = (min: number, max: number) =>\n      Math.floor(Math.random() * (max - min + 1)) + min\n\n    let baseNumbers = 17\n\n    while (baseNumbers > 0) {\n      const fillX = rand(0, 8)\n      const fillY = rand(0, 8)\n      const allowedNumbers = this.allowedNumbers(fillX, fillY)\n\n      if (allowedNumbers.length > 3) {\n        const randomIndex = rand(0, allowedNumbers.length - 1)\n        this.set(fillX, fillY, allowedNumbers[randomIndex])\n        baseNumbers--\n      }\n    }\n\n    if (!this.solve()) {\n      return this.generate()\n    }\n\n    let digNumbers = 81 - rand(17, 40)\n\n    while (digNumbers > 0) {\n      const digX = rand(0, 8)\n      const digY = rand(0, 8)\n\n      if (this.get(digX, digY) && this.allowedNumbers(digX, digY).length < 7) {\n        this.set(digX, digY, 0)\n        digNumbers--\n      }\n    }\n  }\n\n  defaultGrid() {\n    return [...Array(SIZE)].map(x => [...Array(SIZE).fill(0)])\n  }\n\n  get(x: number, y: number): number {\n    return this.grid[y][x]\n  }\n\n  set(x: number, y: number, value: number): Error | number {\n    if (value) {\n      if (this.get(x, y) === value) {\n        return value\n      }\n\n      if (!this.allowedNumbersInRow(y).includes(value)) {\n        throw new Error(`${value} is not allowed in the row ${y}`)\n      }\n\n      if (!this.allowedNumbersInColumn(x).includes(value)) {\n        throw new Error(`${value} is not allowed in the column ${x}`)\n      }\n\n      if (!this.allowedNumbersInBlock(x, y).includes(value)) {\n        throw new Error(`${value} is not allowed in the block ${y}`)\n      }\n    }\n\n    return (this.grid[y][x] = value)\n  }\n\n  row(y: number): number[] {\n    return this.grid[y]\n  }\n\n  column(x: number): number[] {\n    return this.grid.map(row => row[x])\n  }\n\n  allowedNumbersInRow(y: number) {\n    const row = this.row(y)\n    return NUMBERS.filter(num => !row.includes(num))\n  }\n\n  allowedNumbersInColumn(x: number) {\n    const column = this.column(x)\n    return NUMBERS.filter(num => !column.includes(num))\n  }\n\n  allowedNumbersInBlock(x: number, y: number) {\n    const bx = Math.floor(x / 3) * 3\n    const by = Math.floor(y / 3) * 3\n\n    let numbersInBlock: number[] = []\n\n    for (var i = 0; i < 3; i++) {\n      for (var j = 0; j < 3; j++) {\n        numbersInBlock.push(this.get(bx + i, by + j))\n      }\n    }\n\n    return NUMBERS.filter(num => !numbersInBlock.includes(num))\n  }\n\n  allowedNumbers(x: number, y: number) {\n    const numbersInBlock = this.allowedNumbersInBlock(x, y)\n\n    if (numbersInBlock.length > 1) {\n      const numbersInRow = this.allowedNumbersInRow(y)\n      const numbersInColumn = this.allowedNumbersInColumn(x)\n      return numbersInBlock.filter(\n        num => numbersInRow.includes(num) && numbersInColumn.includes(num)\n      )\n    } else {\n      return numbersInBlock\n    }\n  }\n\n  emptyCells() {\n    let cells: Array<[number, number]> = []\n\n    this.grid.forEach((row, y) => {\n      row.forEach((num, x) => {\n        !num && cells.push([x, y])\n      })\n    })\n\n    return cells\n  }\n\n  anyEmptyCell(allowedNumbersLength = SIZE + 1) {\n    let cell: number[] = []\n\n    this.emptyCells().some((emptyCell: number[]) => {\n      const [x, y] = emptyCell\n      const length = this.allowedNumbers(x, y).length\n\n      if (length < allowedNumbersLength) {\n        cell = emptyCell\n        allowedNumbersLength = length\n      }\n\n      return length === 1\n    })\n\n    return cell\n  }\n\n  isSolved() {\n    return this.grid.every((row, y) => row.every((num, x) => num))\n  }\n\n  solve() {\n    return this.solveUltimately()\n  }\n\n  solveUltimately() {\n    if (this.isSolved()) {\n      return true\n    }\n\n    let [x, y] = this.anyEmptyCell()\n    var allowedNumbers = this.allowedNumbers(x, y)\n\n    while (allowedNumbers.length > 0) {\n      let value = allowedNumbers.shift() as number\n      this.set(x, y, value)\n\n      try {\n        if (this.solveUltimately()) {\n          return true\n        }\n      } catch (err) {\n        // Nothing\n      }\n\n      this.set(x, y, 0)\n    }\n\n    return false\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import Sudoku from \"../lib/sudoku\"\n\ndeclare var self: any\n\nself.addEventListener(\"message\", (event: any) => {\n  const sudoku = new Sudoku()\n\n  console.time(\"Sudoku generates\")\n  sudoku.generate()\n  console.timeEnd(\"Sudoku generates\")\n\n  self.postMessage({\n    gridData: sudoku.grid\n  })\n\n  self.close()\n})\n"],"sourceRoot":""}